window.onload = function () {
  // ‚úÖ Firebase config
  const firebaseConfig = {
    apiKey: "AIzaSyDe6gvo3dC9WUxGTDqI1RZFhU_i2HLzMIk",
    authDomain: "businessdb-84869.firebaseapp.com",
    databaseURL: "https://businessdb-84869-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "businessdb-84869",
    storageBucket: "businessdb-84869.firebasestorage.app",
    messagingSenderId: "789894098053",
    appId: "1:789894098053:web:ea281a17c570bb64de8dec",
    measurementId: "G-XE82C87YXH"
  };

  firebase.initializeApp(firebaseConfig);
  const db = firebase.firestore();

  console.log("‚úÖ Firebase initialized");

  // üîê –õ–û–ì–ò–ù
  window.login = function () {
    const number = document.getElementById("login-number").value.trim();
    const pass = document.getElementById("login-password").value.trim();

    if (!number || !pass) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    db.collection("Users")
      .where("number", "==", number)
      .get()
      .then((snapshot) => {
        if (snapshot.empty) {
          alert("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        } else {
          const data = snapshot.docs[0].data();
          if (data.password === pass) {
            alert("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥");
            localStorage.setItem("number", number);
            // window.location.href = "main.html";
          } else {
            alert("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");
          }
        }
      })
      .catch((error) => {
        alert("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + error.message);
      });
  };

  // üÜï –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
  window.register = function () {
    const number = document.getElementById("reg-number").value.trim();
    const pass1 = document.getElementById("reg-pass1").value.trim();
    const pass2 = document.getElementById("reg-pass2").value.trim();

    if (!number || !pass1 || !pass2) {
      alert("‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    if (pass1 !== pass2) {
      alert("‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
      return;
    }

    db.collection("Users")
      .where("number", "==", number)
      .get()
      .then((snapshot) => {
        if (!snapshot.empty) {
          alert("‚ùå –¢–∞–∫–æ–π –Ω–æ–º–µ—Ä —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω");
        } else {
            db.collection("Users").add({
                    number: number,
                    password: pass1,
                    balance: 0
                })
                .then((docRef) => {
                    alert("‚úÖ User added with ID: " + docRef.id);
                })
                .catch((error) => {
                    alert("‚ùå Failed to add user: " + error.message);
                    console.error(error);
                });
            db.collection("Stats").add({ number, alum: 0, plastic: 0, glass: 0 });
            db.collection("Stats").add({ number, onay: 0, r2d2: 0, koptic: 0 });

            alert("‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è");
            window.location.href = "index.html";
        }
      })
      .catch((error) => {
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + error.message);
      });
  };
};
